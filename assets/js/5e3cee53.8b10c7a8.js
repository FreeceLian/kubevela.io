(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[96657],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return d}});var o=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),p=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return o.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,v=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return t?o.createElement(v,a(a({ref:n},s),{},{components:t})):o.createElement(v,a({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},62831:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l},default:function(){return s}});var o=t(22122),r=t(19756),i=(t(67294),t(3905)),a={title:"ServiceAccount Integration"},c={unversionedId:"end-user/service-account-integration",id:"end-user/service-account-integration",isDocsHomePage:!1,title:"ServiceAccount Integration",description:"KubeVela applies Components and runs Workflow with the controller service account, which allows you to manage components across namespaces.",source:"@site/docs/end-user/service-account-integration.md",sourceDirName:"end-user",slug:"/end-user/service-account-integration",permalink:"/docs/next/end-user/service-account-integration",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/service-account-integration.md",version:"current",lastUpdatedBy:"Sunghoon Kang",lastUpdatedAt:1647326757,formattedLastUpdatedAt:"3/15/2022",frontMatter:{title:"ServiceAccount Integration"},sidebar:"docs",previous:{title:"Built-in Workflow Steps",permalink:"/docs/next/end-user/workflow/built-in-workflow-defs"},next:{title:"UI-Schema",permalink:"/docs/next/reference/ui-schema"}},l=[{value:"Example",id:"example",children:[{value:"Creating ServiceAccount",id:"creating-serviceaccount",children:[]},{value:"Creating Role/RoleBinding",id:"creating-rolerolebinding",children:[]},{value:"Deploying an Application with ServiceAccount",id:"deploying-an-application-with-serviceaccount",children:[]}]},{value:"Limitations",id:"limitations",children:[]}],p={toc:l};function s(e){var n=e.components,t=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"KubeVela applies Components and runs Workflow with the controller service account, which allows you to manage components across namespaces."),(0,i.kt)("p",null,"However, in the soft-multitenancy environments, such as ",(0,i.kt)("a",{parentName:"p",href:"https://kubernetes.io/blog/2021/04/15/three-tenancy-models-for-kubernetes/#namespaces-as-a-service"},"Namespaces as a Service"),", you may need to limit Applications to allow applying components or running workflows in the authorized namespaces only."),(0,i.kt)("p",null,"You can limit by setting ",(0,i.kt)("inlineCode",{parentName:"p"},"app.oam.dev/service-account-name")," annotation with the specific ServiceAccount name. If defined, KubeVela will use the given ServiceAccount instead of the controller ServiceAccount when applying Components and running Workflow."),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"Let's assume that we have two namespaces:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"demo-service"),": for managing application"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"demo-service-prod"),": to deploy components for the production environment")),(0,i.kt)("p",null,"In this example, we will make the Application use a specific ServiceAccount instead of the controller ServiceAccount."),(0,i.kt)("h3",{id:"creating-serviceaccount"},"Creating ServiceAccount"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"deployer")," ServiceAccount in ",(0,i.kt)("inlineCode",{parentName:"p"},"demo-service")," namespace."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: deployer\n  namespace: demo-service\n")),(0,i.kt)("h3",{id:"creating-rolerolebinding"},"Creating Role/RoleBinding"),(0,i.kt)("p",null,"Allow ",(0,i.kt)("inlineCode",{parentName:"p"},"deployer")," ServiceAccount in ",(0,i.kt)("inlineCode",{parentName:"p"},"demo-service")," to manage Deployments in ",(0,i.kt)("inlineCode",{parentName:"p"},"demo-service-prod")," by creating Role/RoleBinding."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: deployments:admin\n  namespace: demo-service-prod\nrules:\n  - apiGroups: ["apps"]\n    resources: ["deployments"]\n    verbs: ["*"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: deployments:admin\n  namespace: demo-service-prod\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: deployments:admin\nsubjects:\n  - kind: ServiceAccount\n    name: deployer\n    namespace: demo-service\n')),(0,i.kt)("h3",{id:"deploying-an-application-with-serviceaccount"},"Deploying an Application with ServiceAccount"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: multi-env-demo-with-service-account\n  namespace: demo-service\n  annotations:\n    app.oam.dev/service-account-name: deployer # the name of the ServiceAccount we created\nspec:\n  components:\n    - name: nginx-server\n      type: webservice\n      properties:\n        image: nginx:1.21\n        port: 80\n  policies:\n    - name: env\n      type: env-binding\n      properties:\n        created: false\n        envs:\n          - name: prod\n            patch:\n              components:\n                - name: nginx-server\n                  type: webservice\n                  properties:\n                    image: nginx:1.20\n                    port: 80\n            placement:\n              namespaceSelector:\n                name: demo-service-prod\n  workflow:\n    steps:\n      - name: deploy-prod-server\n        type: deploy2env\n        properties:\n          policy: env\n          env: prod\n")),(0,i.kt)("p",null,"After deploying the Application, you can check the Application is deployed successfully."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"NAME                                  COMPONENT      TYPE         PHASE              HEALTHY   STATUS      AGE\nmulti-env-demo-with-service-account   nginx-server   webservice   workflowFinished   true      Ready:1/1   18s\n")),(0,i.kt)("p",null,"If you set non-authorized ServiceAccount to the annotation, you can find an error message like below in the Application status."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Dispatch: Found 1 errors. [(cannot get object: deployments.apps "nginx-server" is forbidden: User "system:serviceaccount:demo-service:non-authorized-account" cannot get resource "deployments" in API group "apps" in the namespace "demo-service-prod")]\n')),(0,i.kt)("h2",{id:"limitations"},"Limitations"),(0,i.kt)("p",null,"ServiceAccount Integration doesn't support Multi-Cluster Application Delivery.\nEven if you set ServiceAccount name to the annotation, KubeVela will ignore it if the scope is a non-local cluster."),(0,i.kt)("p",null,"You can follow up about this issue on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/oam-dev/kubevela/issues/3440"},"GitHub"),"."))}s.isMDXComponent=!0}}]);