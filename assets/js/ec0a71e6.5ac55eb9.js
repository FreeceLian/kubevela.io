(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[41221],{3905:function(e,t,a){"use strict";a.d(t,{Zo:function(){return m},kt:function(){return k}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},p=Object.keys(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(n=0;n<p.length;n++)a=p[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),s=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,p=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(a),k=r,u=d["".concat(o,".").concat(k)]||d[k]||c[k]||p;return a?n.createElement(u,i(i({ref:t},m),{},{components:a})):n.createElement(u,i({ref:t},m))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=a.length,i=new Array(p);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<p;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},29573:function(e,t,a){"use strict";a.r(t),a.d(t,{frontMatter:function(){return i},metadata:function(){return l},toc:function(){return o},default:function(){return m}});var n=a(22122),r=a(19756),p=(a(67294),a(3905)),i={title:"Built-in Workflow Steps"},l={unversionedId:"end-user/workflow/built-in-workflow-defs",id:"end-user/workflow/built-in-workflow-defs",isDocsHomePage:!1,title:"Built-in Workflow Steps",description:"This documentation will walk through the built-in workflow steps that you can use to design an application deployment process.",source:"@site/docs/end-user/workflow/built-in-workflow-defs.md",sourceDirName:"end-user/workflow",slug:"/end-user/workflow/built-in-workflow-defs",permalink:"/docs/next/end-user/workflow/built-in-workflow-defs",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/workflow/built-in-workflow-defs.md",version:"current",lastUpdatedBy:"Tianxin Dong",lastUpdatedAt:1642077156,formattedLastUpdatedAt:"1/13/2022",frontMatter:{title:"Built-in Workflow Steps"},sidebar:"docs",previous:{title:"Multi-Environment",permalink:"/docs/next/end-user/policies/envbinding"},next:{title:"ServiceAccount Integration",permalink:"/docs/next/end-user/service-account-integration"}},o=[{value:"apply-application",id:"apply-application",children:[{value:"Overview",id:"overview",children:[]},{value:"Parameter",id:"parameter",children:[]},{value:"Example",id:"example",children:[]}]},{value:"depends-on-app",id:"depends-on-app",children:[{value:"Overview",id:"overview-1",children:[]},{value:"Parameter",id:"parameter-1",children:[]},{value:"Example",id:"example-1",children:[]}]},{value:"deploy2env",id:"deploy2env",children:[{value:"Overview",id:"overview-2",children:[]},{value:"Parameter",id:"parameter-2",children:[]},{value:"Example",id:"example-2",children:[]}]},{value:"notification",id:"notification",children:[{value:"Overview",id:"overview-3",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Example",id:"example-3",children:[]}]},{value:"apply-object",id:"apply-object",children:[{value:"Overview",id:"overview-4",children:[]},{value:"Parameters",id:"parameters-1",children:[]},{value:"Example",id:"example-4",children:[]}]},{value:"read-object",id:"read-object",children:[{value:"Overview",id:"overview-5",children:[]},{value:"Parameters",id:"parameters-2",children:[]},{value:"Example",id:"example-5",children:[]}]},{value:"export2config",id:"export2config",children:[{value:"Overview",id:"overview-6",children:[]},{value:"Parameters",id:"parameters-3",children:[]},{value:"Example",id:"example-6",children:[]}]},{value:"export2secret",id:"export2secret",children:[{value:"Overview",id:"overview-7",children:[]},{value:"Parameters",id:"parameters-4",children:[]},{value:"Example",id:"example-7",children:[]}]},{value:"suspend",id:"suspend",children:[{value:"Overview",id:"overview-8",children:[]},{value:"Parameter",id:"parameter-3",children:[]},{value:"Example",id:"example-8",children:[]}]}],s={toc:o};function m(e){var t=e.components,a=(0,r.Z)(e,["components"]);return(0,p.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"This documentation will walk through the built-in workflow steps that you can use to design an application deployment process."),(0,p.kt)("h2",{id:"apply-application"},"apply-application"),(0,p.kt)("h3",{id:"overview"},"Overview"),(0,p.kt)("p",null,"Apply all components and traits in Application."),(0,p.kt)("h3",{id:"parameter"},"Parameter"),(0,p.kt)("p",null,"No arguments, used for custom steps before or after application applied."),(0,p.kt)("h3",{id:"example"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-workflow\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n    - type: ingress\n      properties:\n        domain: testsvc.example.com\n        http:\n          /: 8000\n  workflow:\n    steps:\n      - name: express-server\n        type: apply-application\n")),(0,p.kt)("h2",{id:"depends-on-app"},"depends-on-app"),(0,p.kt)("h3",{id:"overview-1"},"Overview"),(0,p.kt)("p",null,"Wait for the specified Application to complete."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},(0,p.kt)("inlineCode",{parentName:"p"},"depends-on-app")," will check if the cluster has the application with ",(0,p.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"namespace")," defines in ",(0,p.kt)("inlineCode",{parentName:"p"},"properties"),".\nIf the application exists, the next step will be executed after the application is running.\nIf the application do not exists, KubeVela will check the ConfigMap with the same name, and read the config of the Application and apply to cluster.\nThe ConfigMap is like below: the ",(0,p.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,p.kt)("inlineCode",{parentName:"p"},"namespace")," of the ConfigMap is the same in properties. In data, the key is ",(0,p.kt)("inlineCode",{parentName:"p"},"name"),", and the value is the yaml of the deployed application yaml."),(0,p.kt)("pre",{parentName:"blockquote"},(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: myapp\n  namespace: vela-system\ndata:\n  myapp: ...\n"))),(0,p.kt)("h3",{id:"parameter-1"},"Parameter"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"name"),(0,p.kt)("td",{parentName:"tr",align:"center"},"string"),(0,p.kt)("td",{parentName:"tr",align:"center"},"The name of the Application")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"namespace"),(0,p.kt)("td",{parentName:"tr",align:"center"},"string"),(0,p.kt)("td",{parentName:"tr",align:"center"},"The namespace of the Application")))),(0,p.kt)("h3",{id:"example-1"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-workflow\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n    - type: ingress\n      properties:\n        domain: testsvc.example.com\n        http:\n          /: 8000\n  workflow:\n    steps:\n      - name: express-server\n        type: depends-on-app\n        properties:\n          name: another-app\n          namespace: default\n")),(0,p.kt)("h2",{id:"deploy2env"},"deploy2env"),(0,p.kt)("h3",{id:"overview-2"},"Overview"),(0,p.kt)("p",null,"Apply Application in different policies and envs."),(0,p.kt)("h3",{id:"parameter-2"},"Parameter"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"policy"),(0,p.kt)("td",{parentName:"tr",align:"center"},"string"),(0,p.kt)("td",{parentName:"tr",align:"center"},"The name of the policy")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"env"),(0,p.kt)("td",{parentName:"tr",align:"center"},"string"),(0,p.kt)("td",{parentName:"tr",align:"center"},"The name of the env")))),(0,p.kt)("h3",{id:"example-2"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: multi-env-demo\n  namespace: default\nspec:\n  components:\n    - name: nginx-server\n      type: webservice\n      properties:\n        image: nginx:1.21\n        port: 80\n\n  policies:\n    - name: env\n      type: env-binding\n      properties:\n        created: false\n        envs:\n          - name: test\n            patch:\n              components:\n                - name: nginx-server\n                  type: webservice\n                  properties:\n                    image: nginx:1.20\n                    port: 80\n            placement:\n              namespaceSelector:\n                name: test\n          - name: prod\n            patch:\n              components:\n                - name: nginx-server\n                  type: webservice\n                  properties:\n                    image: nginx:1.20\n                    port: 80\n            placement:\n              namespaceSelector:\n                name: prod\n\n  workflow:\n    steps:\n      - name: deploy-test-server\n        type: deploy2env\n        properties:\n          policy: env\n          env: test\n      - name: deploy-prod-server\n        type: deploy2env\n        properties:\n          policy: env\n          env: prod\n")),(0,p.kt)("h2",{id:"notification"},"notification"),(0,p.kt)("h3",{id:"overview-3"},"Overview"),(0,p.kt)("p",null,"Send notifications. You can use the notification to send email, slack, ding talk and lark."),(0,p.kt)("h3",{id:"parameters"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, please fulfill its from, to and content if you want to send email")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.from.address"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the email address that you want to send from")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.from.alias"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, the email alias to show after sending the email")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.from.password"),(0,p.kt)("td",{parentName:"tr",align:"center"},"ValueOrSecret"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the password of the email, you can either specify it in value or use secretRef")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.from.host"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the host of your email")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.from.port"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Int"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, the port of the email host, default to 587")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.to"),(0,p.kt)("td",{parentName:"tr",align:"center"},"[]String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the email address that you want to send to")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.content.subject"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the subject of the email")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"email.content.body"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the context body of the email")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"slack"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, please fulfill its url and message if you want to send Slack messages")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"slack.url"),(0,p.kt)("td",{parentName:"tr",align:"center"},"ValueOrSecret"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the webhook address of Slack, you can choose to fill it directly in value or specify it in secret")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"slack.message"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the Slack messages you want to send, please follow ",(0,p.kt)("a",{parentName:"td",href:"https://api.slack.com/reference/messaging/payload"},"Slack messaging"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"dingding"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, please fulfill its url and message if you want to send DingTalk messages")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"dingding.url"),(0,p.kt)("td",{parentName:"tr",align:"center"},"ValueOrSecret"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the webhook address of DingTalk, you can choose to fill it directly in value or specify it in secret")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"dingding.message"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the DingTalk messages you want to send, please follow ",(0,p.kt)("a",{parentName:"td",href:"https://developers.dingtalk.com/document/robots/custom-robot-access/title-72m-8ag-pqw"},"DingTalk messaging"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"lark"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, please fulfill its url and message if you want to send Lark messages")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"lark.url"),(0,p.kt)("td",{parentName:"tr",align:"center"},"ValueOrSecret"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the webhook address of Lark, you can choose to fill it directly in value or specify it in secret")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"lark.message"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Required, the Lark messages you want to send, please follow ",(0,p.kt)("a",{parentName:"td",href:"https://open.feishu.cn/document/ukTMukTMukTM/ucTM5YjL3ETO24yNxkjN#8b0f2a1b"},"Lark messaging"))))),(0,p.kt)("p",null,"The ",(0,p.kt)("inlineCode",{parentName:"p"},"ValueOrSecret")," format is:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"value"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, directly get the data from value")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"secretRef.name"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, get data from secret, the name of the secret")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"secretRef.key"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"left"},"Optional, get data from secret, the key of the secret")))),(0,p.kt)("h3",{id:"example-3"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-workflow\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n    - type: ingress\n      properties:\n        domain: testsvc.example.com\n        http:\n          /: 8000\n  workflow:\n    steps:\n      - name: dingtalk-message\n        type: notification\n        properties:\n          dingding:\n            # the DingTalk webhook address, please refer to: https://developers.dingtalk.com/document/robots/custom-robot-access\n            url: \n              value: <url>\n            message:\n              msgtype: text\n              text:\n                context: Workflow starting...\n      - name: application\n        type: apply-application\n      - name: slack-message\n        type: notification\n        properties:\n          slack:\n            # the Slack webhook address, please refer to: https://api.slack.com/messaging/webhooks\n            url:\n              secretRef:\n                name: <secret-key>\n                key: <secret-value>\n            message:\n              text: Workflow ended.\n          lark:\n            url:\n              value: <lark-url>\n            message:\n              msg_type: "text"\n              content: "{\\"text\\":\\" Hello KubeVela\\"}"\n          email:\n            from:\n              address: <sender-email-address>\n              alias: <sender-alias>\n              password:\n                # secretRef:\n                #   name: <secret-name>\n                #   key: <secret-key>\n                value: <sender-password>\n              host: <email host like smtp.gmail.com>\n              port: <email port, optional, default to 587>\n            to:\n              - kubevela1@gmail.com\n              - kubevela2@gmail.com\n            content:\n              subject: test-subject\n              body: test-body\n')),(0,p.kt)("h2",{id:"apply-object"},"apply-object"),(0,p.kt)("h3",{id:"overview-4"},"Overview"),(0,p.kt)("p",null,"Apply Kubernetes native resources, you need to upgrade to KubeVela v1.1.4 or higher to enable ",(0,p.kt)("inlineCode",{parentName:"p"},"apply-object"),"."),(0,p.kt)("h3",{id:"parameters-1"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"value"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Object"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, Kubernetes native resources fields")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"cluster"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Optional, The cluster you want to apply the resource to, default is the current cluster. If you want to apply resource in different cluster, use ",(0,p.kt)("inlineCode",{parentName:"td"},"vela cluster join")," to join the cluster first, and then specify the cluster")))),(0,p.kt)("h3",{id:"example-4"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: server-with-pvc\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n      volumes:\n        - name: "my-pvc"\n          type: "pvc"\n          mountPath: "/test"\n          claimName: "myclaim"\n\n  workflow:\n    steps:\n      - name: apply-pvc\n        type: apply-object\n        properties:\n          # Kubernetes native resources fields\n          value:\n            apiVersion: v1\n            kind: PersistentVolumeClaim\n            metadata:\n              name: myclaim\n              namespace: default\n            spec:\n              accessModes:\n              - ReadWriteOnce\n              resources:\n                requests:\n                  storage: 8Gi\n              storageClassName: standard\n            # the cluster you want to apply the resource to, default is the current cluster\n            cluster: <your cluster name>  \n      - name: apply-server\n        type: apply-component\n        properties:\n          component: express-serve\n')),(0,p.kt)("h2",{id:"read-object"},"read-object"),(0,p.kt)("h3",{id:"overview-5"},"Overview"),(0,p.kt)("p",null,"Read Kubernetes native resources, you need to upgrade to KubeVela v1.1.6 or higher to enable ",(0,p.kt)("inlineCode",{parentName:"p"},"read-object"),"."),(0,p.kt)("h3",{id:"parameters-2"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"apiVersion"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The apiVersion of the resource you want to read")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"kind"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The kind of the resource you want to read")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"name"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The apiVersion of the resource you want to read")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"namespace"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Optional, The namespace of the resource you want to read, defaults to ",(0,p.kt)("inlineCode",{parentName:"td"},"default"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"cluster"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Optional, The cluster you want to read the resource from, default is the current cluster. If you want to read resource in different cluster, use ",(0,p.kt)("inlineCode",{parentName:"td"},"vela cluster join")," to join the cluster first, and then specify the cluster")))),(0,p.kt)("h3",{id:"example-5"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: read-object\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  workflow:\n    steps:\n    - name: read-object\n      type: read-object\n      outputs:\n        - name: cpu\n          valueFrom: output.value.data["cpu"]\n        - name: memory\n          valueFrom: output.value.data["memory"]\n      properties:\n        apiVersion: v1\n        kind: ConfigMap\n        name: my-cm-name\n        cluster: <your cluster name\n    - name: apply\n      type: apply-component\n      inputs:\n        - from: cpu\n          parameterKey: cpu\n        - from: memory\n          parameterKey: memory\n      properties:\n        component: express-server\n')),(0,p.kt)("h2",{id:"export2config"},"export2config"),(0,p.kt)("h3",{id:"overview-6"},"Overview"),(0,p.kt)("p",null,"Export data to ConfigMap, you need to upgrade to KubeVela v1.1.6 or higher to enable ",(0,p.kt)("inlineCode",{parentName:"p"},"export2config"),"."),(0,p.kt)("h3",{id:"parameters-3"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"configName"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The name of the ConfigMap")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"namespace"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Optional, The namespace of the ConfigMap, defaults to ",(0,p.kt)("inlineCode",{parentName:"td"},"context.namespace"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"data"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Map"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The data that you want to export to ConfigMap")))),(0,p.kt)("h3",{id:"example-6"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: export-config\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  workflow:\n    steps:\n      - name: apply-server\n        type: apply-component\n        outputs: \n          - name: status\n            valueFrom: output.status.conditions[0].message\n        properties:\n          component: express-server\n      - name: export-config\n        type: export-config\n        inputs:\n          - from: status\n            parameterKey: data.serverstatus\n        properties:\n          configName: my-configmap\n          data:\n            testkey: testvalue\n")),(0,p.kt)("h2",{id:"export2secret"},"export2secret"),(0,p.kt)("h3",{id:"overview-7"},"Overview"),(0,p.kt)("p",null,"Export data to Secret, you need to upgrade to KubeVela v1.1.6 or higher to enable ",(0,p.kt)("inlineCode",{parentName:"p"},"export2secret"),"."),(0,p.kt)("h3",{id:"parameters-4"},"Parameters"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"secretName"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The name of the Secret")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"namespace"),(0,p.kt)("td",{parentName:"tr",align:"center"},"String"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Optional, The namespace of the Secret, defaults to ",(0,p.kt)("inlineCode",{parentName:"td"},"context.namespace"))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"data"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Map"),(0,p.kt)("td",{parentName:"tr",align:"center"},"Required, The data that you want to export to Secret")))),(0,p.kt)("h3",{id:"example-7"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: export-secret\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n  workflow:\n    steps:\n      - name: apply-server\n        type: apply-component\n        outputs: \n          - name: status\n            valueFrom: output.status.conditions[0].message\n        properties:\n          component: express-server\n      - name: export-secret\n        type: export-secret\n        inputs:\n          - from: status\n            parameterKey: data.serverstatus\n        properties:\n          secretName: my-secret\n          data:\n            testkey: testvalue\n")),(0,p.kt)("h2",{id:"suspend"},"suspend"),(0,p.kt)("h3",{id:"overview-8"},"Overview"),(0,p.kt)("p",null,"Suspend the current workflow, we can use ",(0,p.kt)("inlineCode",{parentName:"p"},"vela workflow resume appname")," to resume the suspended workflow."),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"For more information of ",(0,p.kt)("inlineCode",{parentName:"p"},"vela workflow"),", please refer to ",(0,p.kt)("a",{parentName:"p",href:"../../cli/vela_workflow"},"vela cli"),"\u3002")),(0,p.kt)("h3",{id:"parameter-3"},"Parameter"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,p.kt)("th",{parentName:"tr",align:"center"},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"center"},"-"),(0,p.kt)("td",{parentName:"tr",align:"center"},"-"),(0,p.kt)("td",{parentName:"tr",align:"center"},"-")))),(0,p.kt)("h3",{id:"example-8"},"Example"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: core.oam.dev/v1beta1\nkind: Application\nmetadata:\n  name: first-vela-workflow\n  namespace: default\nspec:\n  components:\n  - name: express-server\n    type: webservice\n    properties:\n      image: crccheck/hello-world\n      port: 8000\n    traits:\n    - type: ingress\n      properties:\n        domain: testsvc.example.com\n        http:\n          /: 8000\n  workflow:\n    steps:\n      - name: slack-message\n        type: webhook-notification\n        properties:\n          slack:\n            # the Slack webhook address, please refer to: https://api.slack.com/messaging/webhooks\n            message:\n              text: Ready to apply the application, ask the administrator to approve and resume the workflow.\n      - name: manual-approval\n        type: suspend\n      - name: express-server\n        type: apply-application\n")))}m.isMDXComponent=!0}}]);